// https://leetcode.com/problems/longest-repeating-character-replacement/

class Solution {
    public int characterReplacement(String s, int k) {
        int l = 0;
        int max = 0;
        Map<Character, Integer> map = new HashMap<>();

        for(int r=0;r<s.length();r++) {
            char ch = s.charAt(r);

            if(map.containsKey(ch))
                map.put(ch, map.get(ch)+1);
            else
                map.put(ch, 1);

            while (r-l+1 - maxCount(map) > k) { 
                char ch2 = s.charAt(l++);
                int count = map.get(ch2);

                if(count > 1)
                    map.put(ch2, map.get(ch2)-1);
                else
                    map.remove(ch2);
            }

            max = Math.max(r-l+1, max);
        }

        return max;
    }

    int maxCount(Map<Character, Integer> map) {
        int max = 0;

        for(int v : map.values())
            if(v > max)
                max = v;
        
        return max;
    }
}
